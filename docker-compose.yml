# version: "2.2"

# services:
#   mysql-db:
#     container_name: mysql-db
#     image: mysql
#     restart: always
#     environment:
#       MYSQL_DATABASE: "kbc"
#       MYSQL_ROOT_PASSWORD: "root"
#     expose:
#       - "3306"
#     volumes:
#       - my-db:/var/lib/mysql
#     networks:
#       - app-network

#   redis:
#     container_name: redis
#     image: redis:latest
#     volumes:
#       - redis-data:/data
#     expose:
#       - "6379"
#     networks:
#       - app-network

#   # nginx:
#   #   image: nginx:latest
#   #   volumes:
#   #     - ./nginx.conf:/etc/nginx/nginx.conf
#   #   ports:
#   #     - "8080:8080"
#   #   networks:
#   #     - app-network

#   user:
#     container_name: user
#     build:
#       context: .
#       dockerfile: "user/Dockerfile"
#     environment:
#       - MYSQL_HOST=mysql-db
#       - MYSQL_PORT=3306
#       - MYSQL_USERNAME=root
#       - MYSQL_PASSWORD=root
#       - MYSQL_DATABASE=kbc
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     depends_on:
#       - redis
#       # - nginx
#       - mysql-db
#     networks:
#       - app-network

#   questions:
#     container_name: questions
#     build:
#       context: .
#       dockerfile: "questions/Dockerfile"
#     environment:
#       - MONGODB_URL=mongodb+srv://gaurang:gaurang1234@atlascluster.qkhukud.mongodb.net/
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     depends_on:
#       - redis
#       # - nginx
#     networks:
#       - app-network

#   quiz:
#     container_name: quiz
#     build:
#       context: .
#       dockerfile: "quiz/Dockerfile"
#     environment:
#       - MONGODB_URL=mongodb+srv://gaurang:gaurang1234@atlascluster.qkhukud.mongodb.net/
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     expose:
#       - "3001"
#     ports:
#       - "3001:3001"
#     depends_on:
#       - redis
#       # - nginx
#     networks:
#       # - nginx
#       - app-network

#   api-gateway:
#     container_name: api-gateway
#     build:
#       context: .
#       dockerfile: "api-gateway/Dockerfile"
#     environment:
#       - APP_ENV=development
#       - APP_VERSION=1.0
#       - APP_NAME='Kaun banega crorepati'
#       - APP_DESCRIPTION='Kaun banega crorepati API'
#       - APP_PORT=3000
#       - APP_ENABLE_CORS=true
#       - APP_THROTTLER_TTL_TIME=60
#       - APP_THROTTLER_REQUEST_COUNT=10
#       - JWT_TOKEN_SECRET=jwt-secret-key
#       - JWT_TONE_EXPIRY_TIME=24h
#       - ENABLE_SQL_SSL=false
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     ports:
#       - "3000:3000"
#     expose:
#       - "3000"
#     depends_on:
#       # - nginx
#       - redis
#     networks:
#       - app-network

#   kbc-react:
#     container_name: kbc-react
#     build:
#       context: .
#       dockerfile: "kbc-react/Dockerfile"
#     environment:
#       - VITE_REACT_APP_NAME=KaunBanegaCarorpati
#       - VITE_REACT_APP_API_BASE=kbc_api-gateway
#       - VITE_REACT_APP_SOCKET_SERVER=http://nginx:3001
#     ports:
#       - "5173:5173"
#     depends_on:
#       # - nginx
#       - api-gateway
#       - quiz
#     networks:
#       - app-network

# volumes:
#   redis-data:
#   my-db:

# networks:
#   app-network:

# version: "2.2"

# services:
#   mysql-db:
#     container_name: mysql-db
#     image: mysql:latest
#     restart: always
#     environment:
#       MYSQL_DATABASE: "kbc"
#       MYSQL_ROOT_PASSWORD: "root"
#     expose:
#       - "3306"
#     volumes:
#       - my-db:/var/lib/mysql
#     networks:
#       - app-network

#   redis:
#     container_name: redis
#     image: redis:latest
#     volumes:
#       - redis-data:/data
#     expose:
#       - "6379"
#     networks:
#       - app-network

#   mongodb:
#     image: mongo:latest
#     restart: always
#     volumes:
#       - mongodb-data:/data/db
#     networks:
#       - app-network

#   user:
#     container_name: user
#     build:
#       context: .
#       dockerfile: "user/Dockerfile"
#     environment:
#       - MYSQL_HOST=mysql-db
#       - MYSQL_PORT=3306
#       - MYSQL_USERNAME=root
#       - MYSQL_PASSWORD=root
#       - MYSQL_DATABASE=kbc
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     depends_on:
#       - redis
#       - mysql-db
#     networks:
#       - app-network

#   questions:
#     container_name: questions
#     build:
#       context: .
#       dockerfile: "questions/Dockerfile"
#     environment:
#       - MONGODB_URL=mongodb://mongodb:27017/
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     depends_on:
#       - redis
#       - mongodb
#     networks:
#       - app-network

#   quiz:
#     container_name: quiz
#     build:
#       context: .
#       dockerfile: "quiz/Dockerfile"
#     environment:
#       - MONGODB_URL=mongodb://mongodb:27017/
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     expose:
#       - "3001"
#     ports:
#       - "3001:3001"
#     depends_on:
#       - redis
#       - mongodb
#     networks:
#       - app-network

#   api-gateway:
#     container_name: api-gateway
#     build:
#       context: .
#       dockerfile: "api-gateway/Dockerfile"
#     environment:
#       - APP_ENV=development
#       - APP_VERSION=1.0
#       - APP_NAME=Kaun banega crorepati
#       - APP_DESCRIPTION=Kaun banega crorepati API
#       - APP_PORT=3000
#       - APP_ENABLE_CORS=true
#       - APP_THROTTLER_TTL_TIME=60
#       - APP_THROTTLER_REQUEST_COUNT=10
#       - JWT_TOKEN_SECRET=jwt-secret-key
#       - JWT_TONE_EXPIRY_TIME=24h
#       - ENABLE_SQL_SSL=false
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     ports:
#       - "3000:3000"
#     expose:
#       - "3000"
#     depends_on:
#       - redis
#     networks:
#       - app-network

#   kbc-react:
#     container_name: kbc-react
#     build:
#       context: .
#       dockerfile: "kbc-react/Dockerfile"
#     environment:
#       - VITE_REACT_APP_NAME=KaunBanegaCarorpati
#       - VITE_REACT_APP_API_BASE=http://api-gateway:3000
#       - VITE_REACT_APP_SOCKET_SERVER=http://quiz:3001
#     ports:
#       - "5173:5173"
#     depends_on:
#       - api-gateway
#       - quiz
#     networks:
#       - app-network

# volumes:
#   redis-data:
#   my-db:
#   mongodb-data:

# networks:
#   app-network:

version: "2.2"

services:
  mysql-db:
    container_name: mysql-db
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: "kbc"
      MYSQL_ROOT_PASSWORD: "root"
    expose:
      - "3306"
    volumes:
      - my-db:/var/lib/mysql
    networks:
      app-network:

  redis:
    container_name: redis
    image: redis:latest
    volumes:
      - redis-data:/data
    expose:
      - "6379"
    networks:
      app-network:

  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: always
    volumes:
      - mongodb-data:/data/db
    networks:
      app-network:

  user:
    container_name: user
    build:
      context: .
      dockerfile: "user/Dockerfile"
    environment:
      - MYSQL_HOST=mysql-db
      - MYSQL_PORT=3306
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=kbc
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - mysql-db
    networks:
      app-network:

  questions:
    container_name: questions
    build:
      context: .
      dockerfile: "questions/Dockerfile"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017/
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - mongodb
    networks:
      app-network:

  quiz:
    container_name: quiz
    build:
      context: .
      dockerfile: "quiz/Dockerfile"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017/
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    expose:
      - "3000"
    depends_on:
      - redis
      - mongodb
    networks:
      app-network:

  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: "api-gateway/Dockerfile"
    environment:
      - APP_ENV=development
      - APP_VERSION=1.0
      - APP_NAME=Kaun banega crorepati
      - APP_DESCRIPTION=Kaun banega crorepati API
      - APP_PORT=3000
      - APP_ENABLE_CORS=true
      - APP_THROTTLER_TTL_TIME=60
      - APP_THROTTLER_REQUEST_COUNT=10
      - JWT_TOKEN_SECRET=jwt-secret-key
      - JWT_TONE_EXPIRY_TIME=24h
      - ENABLE_SQL_SSL=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    expose:
      - "3000"
    depends_on:
      - redis
    networks:
      app-network:

  kbc-react:
    container_name: kbc-react
    build:
      context: .
      dockerfile: "kbc-react/Dockerfile"
    environment:
      - VITE_REACT_APP_NAME=KaunBanegaCarorpati
      - VITE_REACT_APP_API_BASE=api
      - VITE_REACT_APP_SOCKET_SERVER=socket
    expose:
      - "5173"
    depends_on:
      - api-gateway
      - quiz
    networks:
      app-network:

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - kbc-react
    networks:
      - app-network

volumes:
  redis-data:
  my-db:
  mongodb-data:

networks:
  app-network:
    driver: bridge
